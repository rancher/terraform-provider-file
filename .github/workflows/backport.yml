name: Backports
# This workflow generates "backport" issues when a release branch label is added to an issue
on:
  issues:
    types: [labeled] # triggered when any label is added to an issue

jobs:
  create-issue:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.label.name, 'release/v') }}
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v7
        with:
          script: |
            const labelName = context.payload.label.name;
            const parentIssue = context.payload.issue;
            const parentIssueTitle = parentIssue.title;
            const parentIssueNumber = parentIssue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const parentIssueBody = parentIssue.body;
            const assignees = ['matttrach', 'jiaqiluo', 'HarrisonWAffel']

            if (!parentIssueBody) {
              core.setFailed('Issue body is empty.');
              return;
            }
            const regex = /https:\/\/github\.com\/[^/]+\/[^/]+\/pull\/(\d+)/;
            const match = parentIssueBody.match(regex);
            if (!match) {
              core.setFailed('Could not find a PR link in the issue body.');
              return;
            }
            const prNumber = match[1];
            console.log(`Found PR Number: ${prNumber}`);

            // Note: can't get terraform-maintainers team, the default token can't access org level objects
            // Create the sub-issue
            const newIssue = await github.rest.issues.create({
              owner: owner,
              repo: repo,
              title: `Backport #${prNumber} to ${labelName}`,
              body:  `Backport #${prNumber} to ${labelName} for #${parentIssueNumber}`,
              labels: [labelName],
              assignees: assignees
            });

            const subIssueId = newIssue.data.id;

            // Attach the sub-issue to the parent using API request
            await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues', {
              owner: owner,
              repo: repo,
              issue_number: parentIssueNumber,
              sub_issue_id: subIssueId,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
